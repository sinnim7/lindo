@import url(https://spoqa.github.io/spoqa-han-sans/css/SpoqaHanSans-kr.css);
/* ✅Reset */
body,
ul,
p {
  margin: 0px;
  padding: 0px;
}

li {
  list-style-type: none;
}

a {
  color: inherit; /*해더에게 물려받게됨*/
  text-decoration: none;
}

img {
  vertical-align: top;
  max-width: 100%;
}

/* ✅Typography */

html {
  font-family: "SpoqaHanSans";
  font-size: 62.5%;
  /* 브라우저 기본 px 16에 62.5%는 10px.*/
  line-height: 1.4;
}

body {
  font-size: 1.4rem;
  /*=> 14px로 조정*/
  /* 🔸rem 단위는 문서의 최상위 요소,
  즉 html 요소 크기의 몇 배인지 정할 때 사용.
  반면 🔸em 단위는 상위 요소 크기의 몇 배인지를 정할 때 사용*/
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  font-size: 100%;
  font-weight: normal;
}

/* ✅Commons */
.clearfix::before,
.clearfix::after {
  /*부모자식간 상하단 마진겹침 해소*/
  content: " ";
  display: table;
  /*table은 안에 컨텐츠가 없다 해도 공간이 생김.
  그래서 마진겹침을 막아 줌*/
}

.clearfix::after {
  /* after로 컨텐츠 이후 공간 차지를 해서
  float 문제 해결*/
  clear: both;
}

/* ✅Layouts => 오직 배치만 다룬다.*/
.l_wrapper {
  /*레이아웃 클래스(가로 기준 배치 설정)*/
  max-width: 980px;
  width: auto;
  /* 🔸반응형 적용
  width가 auto로 없어지면서 사이즈가 축소될 수 있고,
  max-width가 잡혀져 있어서 980보다는 더 커질 수 없음.*/
  padding: 0 30px;
  margin: 0 auto; /*상하단 0 좌우 auto: 가운데 정렬*/
}

.l_sidebar {
  float: left;
  width: 70px;
  margin-right: 20px;
}

.l_sidebar_right {
  float: right;
  margin-left: 20px;
  margin-right: 0;
}

/*그리그 레이아웃 시작*/

.l_main {
  overflow: hidden;
  /*floating된 .l_sidebar와 분리*/
}

.l_row {
  /*block 엘리먼츠라 부모 l_main 크기만큼 꽉 참*/
  margin: -20px -10px 0px -10px;
  /*=> 🔸블록의 width가 auto일때 좌우 마진을 네거티브 주면
  좌우 양 옆으로 확대(삐져나감)됨. 
  근데 부모의 .l_main에 overflow:hidden이 돼 있으니까
  양쪽 옆으로 빠져나간 부분은 시각적으로 나타나지 않게 됨*/
}

.l_row_narrow {
  /* .row 두번째 버전*/
  margin: -10px, -5px, 0 -5px;
}

.l_row_narrow .l_col {
  padding: 0 5px;
  margin-top: 10px;
}

.l_col {
  float: left;
  /* 🔸자식이 플롯이되면 부모는 자식이 플롯된지 모름. 그래서
  부모 영역이 사라짐
  그래서 .l-row에 clearfix 추가*/
  width: 33.333333333%;
  /*=>3단 가로 배열이라서*/
  /* margin: 0 10px; 이 경우 3단이 한줄에 들어가지 못해서
  paddig으로 대체 */
  padding: 0 10px;
  /*=> 근데 앞의 width에 padding이 더해지는 구조라서
  box-sizing: border-box;를 해줘야 함.*/
  box-sizing: border-box;
  margin-top: 20px;
}

/* 12단 그리드*/
.l_col_12_12 {
  width: 100%;
}
.l_col_11_12 {
  width: 91.66666667%;
}
.l_col_10_12 {
  width: 83.33333333%;
}
.l_col_9_12 {
  width: 75%;
}
.l_col_8_12 {
  width: 66.66666667%;
}
.l_col_7_12 {
  width: 58.33333333%;
}
.l_col_6_12 {
  width: 50%;
}
.l_col_5_12 {
  width: 41.66666667%;
}
.l_col_4_12 {
  width: 33.33333333%;
}
.l_col_3_12 {
  width: 25%;
}
.l_col_2_12 {
  width: 16.66666667%;
}
.l_col_1_12 {
  width: 8.33333333%;
}

/*그리그 레이아웃 끝*/

/*임시 코드-작업 시 다른 부분 숨기기*/
/* .header,
.cover {
  display: none;
} */

/* ✅Components */

body {
  /*전체 분위기 색 설정*/
  background-color: black;
  color: #666;
}

.header {
  color: black;
  padding: 20px 0;
  position: relative;
}

/* 잘못된 예시
.header .l_wrapper {
  border: 1px solid white;
}   => l_wrapper은 가로기준만 설정해야 됨! */

/* 해더 - (소속의)으로 실질 디자인 담당*/
.header-inside {
  /*border: 1px solid;*/ /* 해더 color 색상 물려받음 */
}

.header-logo {
  float: left;
  background-image: url(./images/l1l1.png);
  width: 68px;
  height: 40px;
  /*=> 🔸해더 로고는 a태그. 그래서 inline은 폭·넓이 지정 안됨.
  근데 float를 주면 display가 block가 됨!*/
  background-size: cover;
  /*=> 🔸로고img 경우 화면 깨짐 방지를 위해 원본보다 2배 크게 준비해
  css에서 절반 크기로 줄임=> 다운 샘플링*/
  text-indent: -9999px;
  /*=> text 안 보이게 처리*/
  display: block;
  /*=> 반응형 시 float:none 탓에 로고의 폭넓이 사라짐.
  display가 inline으로 돌아와서. 그래서 display에 block 추가.*/
}

.header-menu {
  float: right;
}

.header-menu li {
  float: left;
  /*원래 자식 li가 flaot되면 부모 해더의 높이가 0이 됨.*/
  /*하지만 부모 해더메뉴도 이미 float라서 문제 안 생김*/
  /*border-left: 1px solid;*/ /*해더 color 색상*/
}

.header-menu li a {
  display: block;
  height: 40px;
  /*로고 이미지 높이와 같게. 하지만 a태그는 inline.
  그래서 display를 block으로 설정*/
  line-height: 40px;
  /*한 줄 높이를 40px로 해주면
  텍스트 위아래로 공간이 생겨 세로 가운데 정렬 효과 발생*/
  padding: 0 10px;
}

.search {
  display: block;
  height: 40px;
  line-height: 40px;
  padding: 0 10px;
}

.search-input {
  text-align: center;
  background-color: #fafafa;
  color: #555;
  border: none;
  /* border-bottom: 1px solid #555; */
  line-height: center;
  margin: 0;
  padding: 0;
}

.search-input:hover {
  color: #000;
  border-bottom: 1px solid #333;
  transition: border-bottom 0.3s;
}

.cover {
  background-image: url(./images/cover-bg2.jpg);
  background-color: white;
  background-size: cover;
  background-position: center;
  color: black;

  margin-top: -82px;
  /*🔸네거티브 마진으로 커버 배경img를 해더와 겹치게 작업.
  이 경우 floating된 해더와 충돌이 일어나
  header 전체에 position: relative를 줘야 함.
  header를 앞으로 튀어나오게 하기 위해서임.
  그리고 커버에 padding-top: 82px를 추가해 플로팅 문제 방지
  만약 clear:both; 주면 해더에 가로 막히게 됨.*/
  padding-top: 82px;
}

.cover-contents {
  padding: 60px 0;
  max-width: 450px;
}

.cover-contents h1 {
  font-size: 3.3rem;
  margin-bottom: 20px;
  line-height: 1.2;
}

.cover-contents p {
  color: #777;
}

.cover-contents strong {
  text-align: right;
}

.contents {
}

.category {
  background-color: rgba(0, 0, 0, 0.2);
  padding: 10px 0;
}

.category-wrapper {
  margin: 0 -5px;
}

.category-list {
  display: table;

  width: 100%;
  /*=> 현재 table 콘텐츠가 이라 알아보기 쉽게 일단 이렇게.
  table은 기본 폭넓이가 작지만 콘텐츠 크기에 따라 늘어남.
  또 옆이 커질수록 같이 늘어남.*/
}

.category-list li {
  /*레이아웃 디자인 요소로 활용*/
  display: table-cell;
  /* table-cell은 <td>로 가로 배치.*/
}

.category-anchor {
  /*실질 디자인 담당*/
  display: block;
  /* 인라인인 a태그를 블록으로 바꿔 줌*/
  height: 50px;
  margin: 0 5px;
  /*=> 이 경우 좌우 마진 탓에 위쪽 커버랑 정렬이 맞지 않음.
  양옆으로 그 차이 만큼 늘려야 함.
  하지만 category-list는 테이블이고 width가 100%라 더 이상 늘릴 수 없음.
  그럼 이 ul 자체를 새 div(category-wrapper)로 감싼 후
   margin: 0 --5px; 해서 해결함.*/
  position: relative;
  /*=> category-anchor strong 의 상대위치를 정해줌.
  => category-anchor::after의 상대위치.*/
  overflow: hidden;
  border-radius: 5px;
}

.category-anchor::after {
  content: " ";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #000;
  opacity: 0.5;
}

.category-anchor:hover::after {
  opacity: 0.1;
}
/*before 또는 after 요소에 hover 쓸 경우 hover가 먼저 와야 함.
부모요소에 hover 이벤트 발생시 before에 특정 스타일 적용이라고 해석*/

.category-anchor-bg {
  height: 100%;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  /*.l_wrapper 반응형 적용으로 left, transform 지정해 줌*/
  top: 0;
  /*콘텐츠 추가로 테이블 폭이 자동으로 넓어지기 때문에
  anchor-bg도 공간을 차지하지 않게끔 absolute 처리
  그리고 category-anchor에서 overflow: hidden 처리*/
}

.category-anchor strong {
  position: absolute;
  left: 0;
  right: 0;
  text-align: center;
  top: 50%;
  transform: translateY(-50%);
  /*transform: translate는 x축, y축 위치 지정.*/
  z-index: 10;
  /*=> posion 속성을 이용하면 요소가 겹치게 됨.
  이때 요소들의 앞뒤를 z-index 속성으로 정함.
  값은 정수고 숫자가 클수록 위로, 숫자가 작을수록 아래로 내려감.*/
  color: white;
}

.section {
  background-color: whitesmoke;
  padding: 40px 0;
}

.section-title h2 {
  font-size: 2rem;
  color: black;
  margin-bottom: 10px;
}

.item {
  position: relative;
  /*.item h3 기준점 설정*/
}

.item-cover {
  width: 100%;
  /*=> img를 부모크기만큼 꽉 채움*/
  display: block;
  /*=> 아래쪽 남은 공간을 없앰*/
  transform: scale(1);
}

.item-cover:hover {
  background-color: #333;
  opacity: 0.8;
  transform: scale(1.05);
  transition: transform 0.7s;
}

.item h3 {
  position: absolute;
  left: 0;
  top: 0;
  /* absolute의 기준점을
  부모인 .item으로 잡아줌(relative)
  bottom도 0하면 text가 2줄 돼도 아래쪽이 기준이 됨*/
  margin: 5%;
  font-size: 1.6rem;
  color: white;
}

.item h4 {
  position: absolute;
  right: 0;
  top: 0;
  margin: 5%;
  font-size: 1.6rem;
  color: white;
}

.item a img {
  position: absolute;
  left: 0;
  top: 0;
  margin: 5%;
  color: white;
  width: 75px;
  height: 75px;
  border-radius: 32px;
}

.footer {
  color: #666;
  padding: 20px 0;
}

.footer-logo {
  opacity: 0.2;
}

.footer-contents {
  margin-bottom: 20px;
}

.footer-menu-item {
  float: left;
  margin-right: 30px;
}

.footer-menu-item h3 {
  color: #aaa;
  margin-bottom: 10px;
}

.footer-copyright {
  border-top: 1px solid #555;
  padding-top: 20px;
}

/* ✅Mediaqueries */

/* Pc */
@media (min-width: 769px) {
  .l_header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    border-bottom: 1px solid #ddd;
    height: 45px;
    z-index: 900;
    background-color: rgba(247, 247, 247, 0.89);
  }
}

/* Table */
@media (max-width: 768px) {
  .l_header {
    position: none;
  }

  .l_sidebar {
    float: none;
    margin-bottom: 20px;
    margin: 0 0 20px 0;
    width: 200px;
  }

  .section-title h2 {
    font-size: 3rem;
    color: black;
    margin-bottom: 10px;
  }

  .section-title p {
    font-size: 3rem;
    color: #666;
    margin-bottom: 10px;
    width: 400px;
  }
}

/* Mobile */
@media (max-width: 480px) {
  /* 모바일 12단 그리드*/
  .l_col_mobile_12_12 {
    /* 1단으로 만들어라*/
    width: 100%;
  }
  .l_col_mobile_11_12 {
    width: 91.66666667%;
  }
  .l_col_mobile_10_12 {
    width: 83.33333333%;
  }
  .l_col_mobile_9_12 {
    width: 75%;
  }
  .l_col_mobile_8_12 {
    width: 66.66666667%;
  }
  .l_col_mobile_7_12 {
    width: 58.33333333%;
  }
  .l_col_mobile_6_12 {
    width: 50%;
  }
  .l_col_mobile_5_12 {
    width: 41.66666667%;
  }
  .l_col_mobile_4_12 {
    width: 33.33333333%;
  }
  .l_col_mobile_3_12 {
    width: 25%;
  }
  .l_col_mobile_2_12 {
    width: 16.66666667%;
  }
  .l_col_mobile_1_12 {
    width: 8.33333333%;
  }

  html {
    font-size: 70%;
  }

  .header {
    border-bottom: 1px solid;
    padding: 5px 0 0 0;
  }

  .header-inside {
    border: 0;
  }

  .header-logo,
  .header-menu {
    float: none;
    /*float가 none이 되면 로고가 작아짐.
    그래서 .header-logo에서 display:block를 추가해줘야 함.*/
  }

  .header-menu li {
    border: 0;
  }

  .header-menu li a {
    padding: 0 5px;
  }

  .l_sidebar {
    width: 300px;
  }

  .section-title h2 {
    font-size: 3.5rem;
  }

  .cover-contents h1 {
  }

  .category {
    position: relative;
    overflow: hidden;
  }

  .category::after {
    content: " ";
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    margin: -50px 0;
    box-shadow: inset 0 0 20px 30px black;
    /* inset은 안쪽에 그림자*/
  }

  .category-wrapper {
    overflow: scroll;
    /*=> 넘쳐 흐르는 것들 스크롤로 설정*/
    position: relative;
  }

  .category-list {
    width: 1000px;
  }

  .footer-menu-item {
    float: none;
    margin-right: 0;
    margin-bottom: 20px;
  }

  .footer-menu-item:last-child {
    margin-bottom: 0;
  }
}
